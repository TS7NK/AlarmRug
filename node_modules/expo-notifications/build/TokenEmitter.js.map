{"version":3,"file":"TokenEmitter.js","sourceRoot":"","sources":["../src/TokenEmitter.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAgB,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AAExE,OAAO,gBAAgB,MAAM,oBAAoB,CAAC;AAKlD,iCAAiC;AACjC,MAAM,YAAY,GAAG,IAAI,YAAY,CAAC,gBAAgB,CAAC,CAAC;AACxD,MAAM,iBAAiB,GAAG,mBAAmB,CAAC;AAE9C,MAAM,UAAU,oBAAoB,CAAC,QAA2B;IAC9D,MAAM,gBAAgB,GAAG,CAAC,EAAE,eAAe,EAAE,EAAE,EAAE;IAC/C,mDAAmD;IACnD,QAAQ,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC;IACzD,OAAO,YAAY,CAAC,WAAW,CAAC,iBAAiB,EAAE,gBAAgB,CAAC,CAAC;AACvE,CAAC;AAED,MAAM,UAAU,2BAA2B,CAAC,YAA0B;IACpE,YAAY,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;AAChD,CAAC","sourcesContent":["import { EventEmitter, Subscription, Platform } from '@unimodules/core';\n\nimport PushTokenManager from './PushTokenManager';\nimport { DevicePushToken } from './Tokens.types';\n\nexport type PushTokenListener = (token: DevicePushToken) => void;\n\n// Web uses SyntheticEventEmitter\nconst tokenEmitter = new EventEmitter(PushTokenManager);\nconst newTokenEventName = 'onDevicePushToken';\n\nexport function addPushTokenListener(listener: PushTokenListener): Subscription {\n  const wrappingListener = ({ devicePushToken }) =>\n    // @ts-ignore: TS can't decide what Platform.OS is.\n    listener({ data: devicePushToken, type: Platform.OS });\n  return tokenEmitter.addListener(newTokenEventName, wrappingListener);\n}\n\nexport function removePushTokenSubscription(subscription: Subscription) {\n  tokenEmitter.removeSubscription(subscription);\n}\n"]}