{"version":3,"file":"AuthSession.types.js","sourceRoot":"","sources":["../src/AuthSession.types.ts"],"names":[],"mappings":"","sourcesContent":["import { AuthError } from './Errors';\nimport { TokenResponse } from './TokenRequest';\n\nexport type AuthSessionOptions = {\n  authUrl: string;\n  returnUrl?: string;\n  showInRecents?: boolean;\n};\n\nexport type AuthSessionResult =\n  | { type: 'cancel' | 'dismiss' | 'locked' }\n  | {\n      type: 'error' | 'success';\n      errorCode: string | null;\n      error?: AuthError | null;\n      params: { [key: string]: string };\n      authentication: TokenResponse | null;\n      url: string;\n    };\n\n/**\n * Options passed to `makeRedirectUriAsync`.\n */\nexport type AuthSessionRedirectUriOptions = {\n  /**\n   * You must define the URI scheme that will be used in a custom built native application or standalone Expo application.\n   * The value should conform to your native app's URI schemes.\n   * You can see conformance with:\n   *\n   * `npx uri-scheme list`\n   *\n   */\n  native?: string;\n  /**\n   * Optional path to append to a URI. This will not be added to `native`.\n   */\n  path?: string;\n  /**\n   * Should use the \\`auth.expo.io\\` proxy.\n   * This is useful for testing managed native apps that require a custom URI scheme.\n   *\n   * @default false\n   */\n  useProxy?: boolean;\n  /**\n   * Attempt to convert the Expo server IP address to localhost.\n   * This is useful for testing when your IP changes often, this will only work for iOS simulator.\n   *\n   * @default false\n   */\n  preferLocalhost?: boolean;\n};\n"]}