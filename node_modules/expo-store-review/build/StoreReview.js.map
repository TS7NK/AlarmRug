{"version":3,"file":"StoreReview.js","sourceRoot":"","sources":["../src/StoreReview.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,kBAAkB,CAAC;AACvD,OAAO,SAAS,MAAM,gBAAgB,CAAC;AACvC,OAAO,KAAK,OAAO,MAAM,cAAc,CAAC;AAExC,OAAO,WAAW,MAAM,mBAAmB,CAAC;AAE5C;;;;;GAKG;AACH,MAAM,CAAC,KAAK,UAAU,gBAAgB;IACpC,OAAO,WAAW,CAAC,gBAAgB,EAAE,CAAC;AACxC,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,WAAW;IACzB,SAAS,CAAC,mBAAmB,EAAE,yBAAyB,EAAE;QACxD,WAAW,EAAE,8BAA8B;KAC5C,CAAC,CAAC;AACL,CAAC;AAED;;;GAGG;AACH,MAAM,CAAC,KAAK,UAAU,aAAa;IACjC,IAAI,WAAW,EAAE,aAAa,EAAE;QAC9B,MAAM,WAAW,CAAC,aAAa,EAAE,CAAC;QAClC,OAAO;KACR;IACD,6GAA6G;IAC7G,MAAM,GAAG,GAAG,QAAQ,EAAE,CAAC;IACvB,IAAI,GAAG,EAAE;QACP,MAAM,SAAS,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QAChD,IAAI,CAAC,SAAS,EAAE;YACd,OAAO,CAAC,IAAI,CAAC,0DAA0D,EAAE,GAAG,CAAC,CAAC;SAC/E;aAAM;YACL,MAAM,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;SAC5B;KACF;SAAM;QACL,iDAAiD;QACjD,OAAO,CAAC,IAAI,CACV,oKAAoK,CACrK,CAAC;KACH;AACH,CAAC;AAED;;;;;GAKG;AACH,MAAM,UAAU,QAAQ;IACtB,MAAM,EAAE,QAAQ,EAAE,GAAG,SAAS,CAAC;IAC/B,oCAAoC;IACpC,IAAI,QAAQ,CAAC,EAAE,KAAK,KAAK,IAAI,QAAQ,EAAE,GAAG,EAAE;QAC1C,OAAO,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC;QAChC,oCAAoC;KACrC;SAAM,IAAI,QAAQ,CAAC,EAAE,KAAK,SAAS,IAAI,QAAQ,EAAE,OAAO,EAAE;QACzD,OAAO,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC;KACtC;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAED;;GAEG;AACH,MAAM,CAAC,KAAK,UAAU,SAAS;IAC7B,OAAO,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,gBAAgB,EAAE,CAAC,CAAC;AACpD,CAAC","sourcesContent":["import { Platform, deprecate } from '@unimodules/core';\nimport Constants from 'expo-constants';\nimport * as Linking from 'expo-linking';\n\nimport StoreReview from './ExpoStoreReview';\n\n/**\n * Determine if the platform has the capabilities to use `requestedReview`\n * - iOS: `true` if iOS 10.3 or greater and the StoreKit framework is linked\n * - Android: `true` if Android 5.0 or greater and PlayStore is installed\n * - web: Always `false`\n */\nexport async function isAvailableAsync(): Promise<boolean> {\n  return StoreReview.isAvailableAsync();\n}\n\n/**\n * @deprecated use `isAvailableAsync()` instead\n */\nexport function isSupported(): void {\n  deprecate('expo-store-review', 'StoreReview.isSupported', {\n    replacement: 'StoreReview.isAvailableAsync',\n  });\n}\n\n/**\n * Use the iOS `SKStoreReviewController` or Android `ReviewManager` API\n * to prompt a user rating without leaving the app.\n */\nexport async function requestReview(): Promise<void> {\n  if (StoreReview?.requestReview) {\n    await StoreReview.requestReview();\n    return;\n  }\n  // If StoreReview is unavailable then get the store URL from `app.config.js` or `app.json` and open the store\n  const url = storeUrl();\n  if (url) {\n    const supported = await Linking.canOpenURL(url);\n    if (!supported) {\n      console.warn(\"Expo.StoreReview.requestReview(): Can't open store url: \", url);\n    } else {\n      await Linking.openURL(url);\n    }\n  } else {\n    // If the store URL is missing, let the dev know.\n    console.warn(\n      \"Expo.StoreReview.requestReview(): Couldn't link to store, please make sure the `android.playStoreUrl` & `ios.appStoreUrl` fields are filled out in your `app.json`\"\n    );\n  }\n}\n\n/**\n * Get your app's store URLs from `app.config.js` or `app.json`:\n * - iOS: https://docs.expo.io/versions/latest/workflow/configuration#appstoreurlurl-to-your-app-on-the-apple-app-store-if-you-have-deployed-it-there-this-is-used-to-link-to-your-store-page-from-your-expo-project-page-if-your-app-is-public\n * - Android: https://docs.expo.io/versions/latest/workflow/configuration#playstoreurlurl-to-your-app-on-the-google-play-store-if-you-have-deployed-it-there-this-is-used-to-link-to-your-store-page-from-your-expo-project-page-if-your-app-is-public\n * - web: returns `null`\n */\nexport function storeUrl(): string | null {\n  const { manifest } = Constants;\n  // eslint-disable-next-line no-undef\n  if (Platform.OS === 'ios' && manifest?.ios) {\n    return manifest.ios.appStoreUrl;\n    // eslint-disable-next-line no-undef\n  } else if (Platform.OS === 'android' && manifest?.android) {\n    return manifest.android.playStoreUrl;\n  }\n  return null;\n}\n\n/**\n * A flag to detect if this module can do anything.\n */\nexport async function hasAction(): Promise<boolean> {\n  return !!storeUrl() || (await isAvailableAsync());\n}\n"]}